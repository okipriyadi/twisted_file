import select
import Queue
import sys 
import socket

#create TCP IP socket.
server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
#setblocking
server.setblocking(0)
server_address = ('localhost', 10000)
print sys.stderr, 'starting server %s port %s' % server_address
server.bind(server_address)

#listen for incoming connection
server.listen(5)

# Keep up with the queues of outgoing messages
message_queues = {}
"""
The timeout value passed to poll() is represented in milliseconds, instead of
seconds, so in order to pause for a full second, the timeout must be set to 1000 .
"""
# Do not block forever (milliseconds)
TIMEOUT = 1000

"""
Python implements poll() with a class that manages the registered data channels
being monitored. Channels are added by calling register() , with flags indicating
which events are interesting for that channel. The full set of flags is listed in Table 11.1.

event         Description
POLLIN        Input Ready
POLLPRI       Priority Input Ready
POLLOUT       Able to receive output
POLLERR       Error
POLLUP        Channel Closed
POLLNVAL      Channel not Open

The echo server will be setting up some sockets just for reading and others to be
read from or written to. The appropriate combinations of flags are saved to the local
variables READ_ONLY and READ_WRITE .
"""

